#!/usr/bin/env python3
"""
Script para converter e importar dados de chamada no formato correto
Converte do formato agrupado para registros individuais por aluno
"""

import asyncio
import json
import os
import uuid
from datetime import datetime
from motor.motor_asyncio import AsyncIOMotorClient
from dotenv import load_dotenv

# Carregar vari√°veis de ambiente
load_dotenv('backend/.env')

# Configura√ß√µes
MONGO_URL = os.environ.get('MONGO_URL', 'mongodb://localhost:27017')
DB_NAME = os.environ.get('DB_NAME', 'test_database')

async def convert_and_import_attendance():
    """Converte dados agrupados em registros individuais de presen√ßa"""
    
    client = AsyncIOMotorClient(MONGO_URL)
    db = client[DB_NAME]
    
    try:
        print("üîÑ Convertendo dados de chamada para formato correto...")
        
        # Buscar turma Professores e Oficiais
        turma = await db.turmas.find_one({'nome': 'Professores e Oficiais'})
        if not turma:
            print("‚ùå Turma 'Professores e Oficiais' n√£o encontrada!")
            return
        
        turma_id = turma['id']
        print(f"‚úÖ Turma encontrada: {turma['nome']} (ID: {turma_id})")
        
        # Buscar alunos da turma
        alunos = []
        async for aluno in db.students.find({'turma_id': turma_id}):
            alunos.append(aluno)
        
        print(f"‚úÖ Encontrados {len(alunos)} alunos na turma")
        
        # Dados de chamada (os mesmos que voc√™ passou)
        dados_chamada = {
            "2025-07-06": {
                "Pr. Henrique": False,
                "Pb Paulo": False,
                "Pb Elias": False,
                "Coop Carlos": False,
                "Coop Elias Filho": False,
                "Coop Jailton": False,
                "Coop Santiago": False,
                "Irm√£ Dorcas": True,
                "Irm√£ Ester Carvalho": False,
                "Irm√£ Marry": True,
                "Irm√£ Renata": False,
                "Irm√£ Rosa": True,
                "Irm√£o Rubens": False,
                "Izabelle": False,
                "Juliana Silva": True,
                "Kesia Ferreira": True,
                "M√°rcio Ferreira": True,
                "Pb Sebasti√£o": False,
                "Tia Ana Paula": False,
                "Tia Deise": False,
                "Tia Eliane": True,
                "Tia Evelyn": False,
                "Tia Fl√°via Andr√©": False,
                "Tia Kelly": False,
                "Tia Lu": False,
                "Tia Nat√°lia": True,
                "Tia Riane": True,
                "Tio √çtalo": True,
                "Pb Carlinhos": True,
                "Sidney Custodio": True,
                "Juliane Reis": True,
                "Vit√≥ria Ferreira": False
            },
            "2025-07-13": {
                "Pr. Henrique": True,
                "Pb Paulo": True,
                "Pb Elias": True,
                "Coop Carlos": False,
                "Coop Elias Filho": True,
                "Coop Jailton": True,
                "Coop Santiago": False,
                "Irm√£ Dorcas": False,
                "Irm√£ Ester Carvalho": False,
                "Irm√£ Marry": False,
                "Irm√£ Renata": False,
                "Irm√£ Rosa": True,
                "Irm√£o Rubens": False,
                "Izabelle": False,
                "Juliana Silva": True,
                "Kesia Ferreira": True,
                "M√°rcio Ferreira": False,
                "Pb Sebasti√£o": False,
                "Tia Ana Paula": True,
                "Tia Deise": True,
                "Tia Eliane": True,
                "Tia Evelyn": True,
                "Tia Fl√°via Andr√©": False,
                "Tia Kelly": True,
                "Tia Lu": True,
                "Tia Nat√°lia": True,
                "Tia Riane": True,
                "Tio √çtalo": False,
                "Pb Carlinhos": False,
                "Sidney Custodio": False,
                "Juliane Reis": False,
                "Vit√≥ria Ferreira": False
            },
            "2025-07-20": {
                "Pr. Henrique": True,
                "Pb Paulo": True,
                "Pb Elias": False,
                "Coop Carlos": False,
                "Coop Elias Filho": False,
                "Coop Jailton": False,
                "Coop Santiago": True,
                "Irm√£ Dorcas": False,
                "Irm√£ Ester Carvalho": True,
                "Irm√£ Marry": False,
                "Irm√£ Renata": False,
                "Irm√£ Rosa": True,
                "Irm√£o Rubens": True,
                "Izabelle": True,
                "Juliana Silva": False,
                "Kesia Ferreira": False,
                "M√°rcio Ferreira": False,
                "Pb Sebasti√£o": True,
                "Tia Ana Paula": False,
                "Tia Deise": True,
                "Tia Eliane": True,
                "Tia Evelyn": True,
                "Tia Fl√°via Andr√©": False,
                "Tia Kelly": True,
                "Tia Lu": False,
                "Tia Nat√°lia": True,
                "Tia Riane": True,
                "Tio √çtalo": True,
                "Pb Carlinhos": False,
                "Sidney Custodio": False,
                "Juliane Reis": False,
                "Vit√≥ria Ferreira": False
            },
            "2025-07-27": {
                "Pr. Henrique": False,
                "Pb Paulo": False,
                "Pb Elias": False,
                "Coop Carlos": False,
                "Coop Elias Filho": False,
                "Coop Jailton": False,
                "Coop Santiago": False,
                "Irm√£ Dorcas": False,
                "Irm√£ Ester Carvalho": False,
                "Irm√£ Marry": False,
                "Irm√£ Renata": False,
                "Irm√£ Rosa": False,
                "Irm√£o Rubens": False,
                "Izabelle": True,
                "Juliana Silva": False,
                "Kesia Ferreira": False,
                "M√°rcio Ferreira": False,
                "Pb Sebasti√£o": False,
                "Tia Ana Paula": False,
                "Tia Deise": True,
                "Tia Eliane": True,
                "Tia Evelyn": True,
                "Tia Fl√°via Andr√©": False,
                "Tia Kelly": False,
                "Tia Lu": False,
                "Tia Nat√°lia": True,
                "Tia Riane": True,
                "Tio √çtalo": False,
                "Pb Carlinhos": False,
                "Sidney Custodio": False,
                "Juliane Reis": False,
                "Vit√≥ria Ferreira": False
            }
        }
        
        # Limpar chamadas antigas da turma
        await db.attendance.delete_many({'turma_id': turma_id})
        print("üßπ Chamadas antigas removidas")
        
        # Converter para registros individuais
        registros_attendance = []
        total_imported = 0
        
        for data, presencas in dados_chamada.items():
            print(f"üìÖ Processando {data}...")
            
            for nome_aluno, presente in presencas.items():
                # Encontrar aluno
                aluno_encontrado = None
                for aluno in alunos:
                    nome_completo = aluno.get('nome_completo', '')
                    if nome_completo.lower() == nome_aluno.lower():
                        aluno_encontrado = aluno
                        break
                
                if aluno_encontrado:
                    # Criar registro de attendance individual
                    attendance_record = {
                        'id': str(uuid.uuid4()),
                        'aluno_id': aluno_encontrado['id'],
                        'turma_id': turma_id,
                        'data': data,
                        'status': 'presente' if presente else 'ausente',
                        'oferta': 2.5 if presente else 0.0,  # Oferta m√©dia por pessoa presente
                        'biblias_entregues': 1 if presente else 0,
                        'revistas_entregues': 1 if presente else 0,
                        'criado_em': datetime.utcnow().isoformat()
                    }
                    registros_attendance.append(attendance_record)
                    total_imported += 1
                else:
                    print(f"   ‚ö†Ô∏è  Aluno '{nome_aluno}' n√£o encontrado")
        
        # Inserir todos os registros
        if registros_attendance:
            await db.attendance.insert_many(registros_attendance)
            print(f"‚úÖ {len(registros_attendance)} registros de presen√ßa inseridos")
        
        # Verificar resultado
        for data in dados_chamada.keys():
            presentes = await db.attendance.count_documents({
                'turma_id': turma_id,
                'data': data,
                'status': 'presente'
            })
            total = await db.attendance.count_documents({
                'turma_id': turma_id,
                'data': data
            })
            print(f"üìä {data}: {presentes}/{total} presentes ({presentes/total*100:.1f}%)")
        
        print(f"\nüéâ Importa√ß√£o conclu√≠da com sucesso!")
        print(f"üìã Total de registros: {total_imported}")
        
    except Exception as e:
        print(f"‚ùå Erro durante importa√ß√£o: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        client.close()

if __name__ == "__main__":
    asyncio.run(convert_and_import_attendance())